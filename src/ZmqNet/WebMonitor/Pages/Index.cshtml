@page
@using Agebull.ZeroNet.Core
@using Newtonsoft.Json
@model IndexModel
@{
    ViewData["Title"] = "基本信息";
}
@section Styles{

    <style>
        .item {
            margin-top: 10px;
            margin-right: 40px;
        }
    </style>
}
@section Scripts{

    <script>
        var data ={
            configs: @(Html.Raw(JsonConvert.SerializeObject(ZeroApplication.Config.GetConfigs().OrderBy(p=>p.StationType).ToArray())))
        };
        var vm = new Vue({
            el: '#vue',
            data: data,
            filters: {
                formatDate(time) {
                    var date = new Date(time);
                    return formatDate(date, 'MM-dd hh:mm:ss');
                },
                formatNumber(number) {
                    if (number){
                        return number.toFixed(4);
                    }else{
                        return "0.0";
                    }
                }
            }
        });
        var ws = function (addr) {
            var that = this;
            that.state = "+open";
            that.addr = addr;
            that.open = function () {
                console.log("try open " + that.addr);
                that.socket = new WebSocket(that.addr);
                that.socket.onopen = that.onopen;
                that.socket.onclose = that.onclose;
                that.socket.onmessage = that.onmessage;
                that.socket.onerror = that.onerror;
            }

            that.onopen = function (e) {
                that.state = "+ok";
                console.log("opened " + that.addr);
                socket.send("+config");
            };
            that.onclose = function (e) {
                window.setTimeout(that.open, 500);
            };
            that.onmessage = function (e) {
                try {
                    var config = eval('(' + e.data + ')');
                    if (config != null) {
                        for (var idx = 0; idx < data.configs.length; idx++) {
                            var cfg = data.configs[idx];
                            if (cfg.station_name === config.station_name) {
                                Vue.set(data.configs, idx, config);
                                return;
                            }
                        }
                        data.configs.push(config);
                    }
                } catch (e) {

                }

            };
            that.onerror = function(e) {
                console.log("error: " + e.data);
                that.state = "+error";
            };
            return this;
        }
        var uri = "ws://" + location.host + "/ws";
        var socket = ws(uri);
        socket.open();
    </script>
}
<div id="vue" class="row">
    <template v-for="config in configs">
        <div class="col-md-3">
            <el-tooltip v-bind:content="config._description" placement="top" effect="light">
                <h2>{{config.station_name}}</h2>
            </el-tooltip>
            <ul>
                <li>Alias</li>
                <template v-for="alia in config.station_alias">
                    {{alia}}
                </template>
                <li>Type:{{config.TypeName}}</li>
                <li>State:{{config.state}}</li>
                <li>ClientAddress</li>{{config.RequestAddress}}
                <li>WorkerAddress</li>{{config.WorkerAddress}}
                <li>Client</li>
                call: {{config.request_in}}
                <template v-if="config.request_out > 0">
                    result: {{config.request_out}}
                </template>
                <template v-if="config.request_err > 0">
                    err: {{config.request_err}}
                </template>
                <li>Wroker</li>call: {{config.worker_out}}
                <template v-if="config.worker_in > 0">
                    result: {{config.worker_in}}
                </template>
                <template v-if="config.worker_err > 0">
                    err: {{config.worker_err}}
                </template>
                <li>
                    Collection({{config.Count}})
                    <ul>
                        TPS
                        <li>Total:{{config.TotalTps}}</li>
                        <li>Avg:{{config.AvgTps}}/s</li>
                        <li>Max:{{config.MaxTps}}/s</li>
                        <li>Min:{{config.MinTps}}/s</li>
                        <li>Last:{{config.LastTps}}/s</li>
                    </ul>
                    <ul>
                        QPS
                        <li>Total:{{config.TotalQps}}</li>
                        <li>Avg:{{config.AvgQps}}/s</li>
                        <li>Max:{{config.MaxQps}}/s</li>
                        <li>Min:{{config.MinQps}}/s</li>
                        <li>Last:{{config.LastQps}}/s</li>
                    </ul>
                </li>
                <li>
                    <el-dropdown trigger="click">
                        <span class="el-dropdown-link">
                            <el-badge v-bind:value="config.worker_count" class="item">
                                <i class="el-icon-caret-bottom el-icon--right">Workers</i>
                            </el-badge>
                        </span>
                        <el-dropdown-menu slot="dropdown">
                            <template v-for="worker in config.workers">
                                <el-dropdown-item class="clearfix">
                                    {{worker.real_name}}:{{worker.state_text}}:{{worker.level}}
                                </el-dropdown-item>
                            </template>
                        </el-dropdown-menu>
                    </el-dropdown>

                </li>

            </ul>
        </div>
    </template>
</div>