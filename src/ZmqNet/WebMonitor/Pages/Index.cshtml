@page
@using Agebull.ZeroNet.Core
@using Newtonsoft.Json
@model IndexModel
@{
    ViewData["Title"] = "基本信息";
}
@section Scripts{

    <script>
        var data ={
            configs: @(Html.Raw(JsonConvert.SerializeObject(ZeroApplication.Config.Getonfigs().OrderBy(p=>p.StationType).ToArray())))
        };
        var vm = new Vue({
            el: '#vue',
            data: data,
            filters: {
                formatDate(time) {
                    var date = new Date(time);
                    return formatDate(date, 'MM-dd hh:mm:ss');
                },
                formatNumber(number) {
                    if (number){
                        return number.toFixed(4);
                    }else{
                        return "0.0";
                    }
                }
            }
        });
        var uri = "ws://" + location.host + "/ws";
        var socket = new WebSocket(uri);  
        socket.onopen = function (e) {
            console.log("opened " + uri);
            socket.send("+config");
        };  
        socket.onclose = function (e) { console.log("closed"); };  
        socket.onmessage = function (e) {
            try {
                var config = eval('(' + e.data + ')');
                if (config != null) {
                    for (var idx = 0; idx < data.configs.length; idx++) {
                        var cfg = data.configs[idx];
                        if (cfg.station_name === config.station_name) {
                            Vue.set(data.configs, idx, config);
                            return;
                        }
                    }
                    data.configs.push(config);
                }
            } catch (e) {

            } 
            
        };  
        socket.onerror = function (e) { write("Error: " + e.data); };  
        /*subscriber.connect();
        var index = 0;
        subscriber.connect();
        subscriber.subscribe("config");
        subscriber.onMessage = function (message) {
            message.popString();
            var bytes = message.popBuffer();
            var reader = new FileReader();
            reader.readAsText(new Blob([bytes]), 'utf-8');
            reader.onload = function (evt) {
                var config = eval('(' + reader.result + ')');
                for (var idx = 0; idx < data.configs.length; idx++) {
                    var cfg = data.configs[idx];
                    if (cfg.station_name === config.station_name) {
                        Vue.set(data.configs, idx, config);
                        return;
                    }
                }
                data.configs.push(config);
            }
        };*/


    </script>
}
<div id="vue" class="row">
    <template v-for="config in configs">
        <div class="col-md-3">
            <el-tooltip v-bind:content="config._description" placement="top" effect="light">
                <h2>{{config.station_name}}</h2>
            </el-tooltip>
            <ul>
                <li>Alias</li>
                <template v-for="alia in config.station_alias">
                    {{alia}}
                </template>
                <li>Type:{{config.TypeName}}</li>
                <li>State:{{config.state}}</li>
                <li>ClientAddress</li>{{config.RequestAddress}}
                <li>WorkerAddress</li>{{config.WorkerAddress}}
                <li>Client</li>
                call: {{config.request_in}}
                <template v-if="config.request_out > 0">
                    result: {{config.request_out}}
                </template>
                <template v-if="config.request_err > 0">
                    err: {{config.request_err}}
                </template>
                <li>Wroker</li>call: {{config.worker_out}}
                <template v-if="config.worker_in > 0">
                    result: {{config.worker_in}}
                </template>
                <template v-if="config.worker_err > 0">
                    err: {{config.worker_err}}
                </template>
                <li>
                    Collection({{config.Count}})
                    <ul>
                        TPS
                        <li>Total:{{config.TotalTps}}</li>
                        <li>Avg:{{config.AvgTps}}/s</li>
                        <li>Max:{{config.MaxTps}}/s</li>
                        <li>Min:{{config.MinTps}}/s</li>
                        <li>Last:{{config.LastTps}}/s</li>
                    </ul>
                    <ul>
                        QPS
                        <li>Total:{{config.TotalQps}}</li>
                        <li>Avg:{{config.AvgQps}}/s</li>
                        <li>Max:{{config.MaxQps}}/s</li>
                        <li>Min:{{config.MinQps}}/s</li>
                        <li>Last:{{config.LastQps}}/s</li>
                    </ul>
                </li>
                <li>Workers</li>
                <template v-for="worker in config.workers">
                    {{worker}}
                    <br />
                </template>
            </ul>
        </div>
    </template>
</div>